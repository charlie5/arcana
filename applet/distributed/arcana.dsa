configuration Arcana
is

   pragma Starter (none);
   --
   --  Tell 'po_gnatdist' to not create any startup script or launcher.
   --  We will launch our Server and Client partitions manually from a console.


   ----------
   --  Server
   --

   server_Partition : partition := (arcana.Server);
   --
   --  Declare the Server partition and assign the Servers 'remote call interface' package to this partition.

   for server_Partition'Termination use Local_Termination;


   procedure launch_arcana_Server is in server_Partition;
   --
   --  Tell po_gnatdist that the 'launch_arcana_Server' procedure is the the Servers 'main' subprogram or launcher.


   ----------
   --  Client
   --

   client_Partition : partition;
   --
   --  Declare the Client partition (which has no remote call interface package associated with it, so no 'initialisation' is required).


   procedure launch_arcana_Client;
   --
   --  Declare the Clients 'main' subprogram or launcher.


   for client_Partition'Main use launch_arcana_Client;
   --
   --  Tell po_gnatdist to assign the above declared 'launch_arcana_Client' procedure as the Clients 'main' subprogram or launcher.


   for client_Partition'Termination use Local_Termination;
   --
   --  Tell po_gnatdist that Clients may terminate locally.


   -----------
   -- Channels
   --

   --   The zip filter works only on 32 bits machines, don't try it on Digital Unix/Alpha.
   --
   -- Channel_1 : Channel := (server_Partition, client_Partition);
   -- for Channel_1'Filter use "zip";


   --------
   --  Misc
   --

   for Partition'Directory use "bin";
   --
   --  Ask po_gnatdist to place the built Client and Server partition executables in the './bin' sub-folder.

end Arcana;
