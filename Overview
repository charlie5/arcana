Chat
~~~~

   Provides a simple demonstration of the Ada 'Distributed Systems Annex' (DSA).



Requirements
~~~~~~~~~~~~

- Provide an application which allows users to join and leave a single chat room.
- All users should be informed when a user enters or leaves.

- Users may enter chat messages, which will be displayed on all users UI.
- Chat messages should contain a timestamp, name of the user from which the message originates and the message itself.

- Should allow for various Client UI versions (ie console, ncurses, GTK, QT4, et al).




Versions
~~~~~~~~

Development: 'fused'   Builds a single executable which may be developed/debugged/tested as with any normal Ada program.

Release:     'dsa'     Builds a distributed system comprising a server partition and a client partition.




Folder Layout
~~~~~~~~~~~~~

chat/applet/chat: Contains a folder each for the single executable 'fused' (development) and the distributed 'dsa' (release) versions.

chat/library:     Contains gnat project files for the common code in the 'source' folder.

chat/source:      Contains source files common to both the fused and dsa versions.




Build
~~~~~

Polyorb is required.



Fused:

$ cd chat/applet/chat/fused
$ gnatmake -P chat_fused


DSA:

$ cd chat/applet/chat/dsa
$ ./builder




Test
~~~~

LAN:


Open a new terminal

$ cd chat/applet/chat/dsa/test/po_cos_naming
$ po_cos_naming


Open a new terminal

$ cd chat/applet/chat/dsa/test/server
$ ../../bin/server_partition


Open a new terminal

$ cd chat/applet/chat/dsa/test/client1
$ ../../bin/client_partition tom


Open a new terminal

$ cd chat/applet/chat/dsa/test/client2
$ ../../bin/client_partition dick


A 'q' as a chat message should quit a client.
An 'end' command will close the server.
Ctrl-C to stop the po_cos_naming server.





WAN:


General:

Open /etc/hosts and ensure it contains a line with your WAN (WWW) net address, matched with your hostname (as defined in /etc/hostname).

<your ip address>    <your hostname>




Running a Client:


Open a new terminal

$ cd chat/applet/chat/dsa/test/client3

Edit polyorb.conf and set the name service to the value given by 'po_cos_naming' server output, similar to ...

name_service=corbaloc:iiop:1.2@192.168.1.4:5001/NameService/000000024fF0000000080000000


Make sure that the 'polyorb.protocols.iiop.default_port' value is open in any firewall and forwarded to the box running the client.


Finally, launch the client ...

$ ../../bin/client_partition harry




Running a Server:


Open a new terminal

$ cd chat/applet/chat/dsa/test/po_cos_naming

Make sure that the 'polyorb.protocols.iiop.default_port' value is open in any firewall and forwarded to the box running the po_cos_naming server.

$ po_cos_naming


Open a new terminal

$ cd chat/applet/chat/dsa/test/server

Edit polyorb.conf and set the name service to the value given by 'po_cos_naming' server output, similar to ...

name_service=corbaloc:iiop:1.2@192.168.1.4:5001/NameService/000000024fF0000000080000000


Make sure that the 'polyorb.protocols.iiop.default_port' value is open in any firewall and forwarded to the box running the server.


Finally, launch the server ...

$ ../../bin/server_partition

